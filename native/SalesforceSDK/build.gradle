apply plugin: 'maven-publish'
apply plugin: 'android-library'

version = "2.1.1-1"
group = "com.force"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.10.+'
    }
}


repositories {
    mavenCentral()
    maven {
        url "http://maven-decentral.github.io/m2/releases"
    }
    maven {
        url "http://maven-decentral.github.io/m2/snapshots"
    }
}

dependencies {
    compile 'com.mcxiaoke.volley:library:1.0.+'
    compile 'com.google.guava:guava:r09'
    compile('org.apache.httpcomponents:httpmime:4.0.3') {
        // exclude these transitives because the conflict with built-in Android stuff
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile 'org.apache:cordova:2.3.0-1'
    compile 'com.zutubi:android-junit-report:0.0.1-SNAPSHOT'
}

android {
    compileSdkVersion 17
    buildToolsVersion "19.0.3"

    lintOptions {
        abortOnError false
    }
/*
    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 11
        versionCode 1
        versionName "1.0"
    }
*/
}

publishing {
    publications {
        maven(MavenPublication) {
            // pull the transitive deps in
            // borrowed from: https://github.com/danieltwagner/android-async-logger/blob/master/build.gradle
            pom.withXml {
                def dependenciesRoot = asNode().appendNode('dependencies')
                // read the compile dependencies...
                def compileConfiguration = project.configurations.getByName("compile")
                def resolvedConfiguration = compileConfiguration.resolvedConfiguration
                def resolvedDependencies = resolvedConfiguration.firstLevelModuleDependencies
                resolvedDependencies.each { dp ->
                    // ... and generate the XML for each dependency manually
                    def thisDependency = dependenciesRoot.appendNode('dependency')
                    thisDependency.appendNode('groupId', dp.moduleGroup)
                    thisDependency.appendNode('artifactId', dp.moduleName)
                    thisDependency.appendNode('version', dp.moduleVersion)
                }
                return dependenciesRoot
            }
            artifact "${project.libsDir}/${project.name}-${project.version}.aar"
        }
    }
    repositories {
        maven {
            url "../../../maven-decentral.github.io/m2/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases' }"
        }
    }
}